kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubectl-ai
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubectl-ai
  template:
    metadata:
      labels:
        app: kubectl-ai
    spec:
      serviceAccountName: kubectl-ai
      containers:
      - name: kubectl-ai
        image: us-central1-docker.pkg.dev/civil-epigram-471815-n0/gke/kubectl-ai:latest
        args:
        - --mcp-server
        env:
        - name: GOOGLE_CLOUD_PROJECT
          value: "PROJECT_ID"
        - name: GOOGLE_CLOUD_LOCATION
          value: "global"
        # Vertex AI authentication will be handled via Workload Identity Federation
---

kind: ServiceAccount
apiVersion: v1
metadata:
  name: kubectl-ai
  # Using GKE Workload Identity Federation - no GSA impersonation needed
---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubectl-ai:view
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
- kind: ServiceAccount
  name: kubectl-ai

---

kind: Service
apiVersion: v1
metadata:
  name: kubectl-ai
  labels:
    app: kubectl-ai
spec:
  selector:
    app: kubectl-ai
  ports:
  - port: 80
    targetPort: 8888
    protocol: TCP
  - port: 8080
    targetPort: 8080
    protocol: TCP